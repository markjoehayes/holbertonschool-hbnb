classDiagram
    %% Base Entity Class (Abstract)
    class BaseModel {
        <<Abstract>>
        -String id
        -DateTime created_at
        -DateTime updated_at
        +save() void
        +delete() void
        +to_dict() Map~String, Object~
        +from_dict(Map~String, Object~) void
    }

    %% User Entity
    class User {
        -String first_name
        -String last_name
        -String email
        -String password_hash
        -String phone_number
        -String profile_picture
        -Boolean is_host
        -Boolean is_verified
        +authenticate(String password) Boolean
        +update_profile(Map~String, Object~ data) void
        +become_host() void
        +get_all_reviews() List~Review~
        +get_all_places() List~Place~
        +get_all_bookings() List~Booking~
    }

    %% Place Entity
    class Place {
        -String title
        -String description
        -Integer rooms
        -Integer bathrooms
        -Integer max_guests
        -Float price_per_night
        -Float latitude
        -Float longitude
        -String address
        -String city
        -String state
        -String country
        -List~String~ images
        -Boolean is_available
        -Date available_from
        -Date available_to
        +update_availability(Date from, Date to) void
        +check_availability(Date check_in, Date check_out) Boolean
        +calculate_total_price(Date check_in, Date check_out) Float
        +add_amenity(Amenity amenity) void
        +remove_amenity(Amenity amenity) void
        +get_all_reviews() List~Review~
    }

    %% Review Entity
    class Review {
        -Integer rating
        -String comment
        -Boolean is_verified_stay
        -Date stay_date
        +update_review(String comment, Integer rating) void
        +report_review(String reason) void
        +is_editable() Boolean
    }

    %% Amenity Entity
    class Amenity {
        -String name
        -String category
        -String icon
        -String description
        +update_amenity(String name, String category) void
    }

    %% Booking Entity
    class Booking {
        -Date check_in
        -Date check_out
        -Integer number_of_guests
        -Float total_price
        -String status
        -String special_requests
        +confirm_booking() void
        +cancel_booking() void
        +calculate_total() Float
        +update_booking(Date check_in, Date check_out, Integer guests) Boolean
        +is_active() Boolean
    }

    %% Relationships and Inheritance
    BaseModel <|-- User
    BaseModel <|-- Place
    BaseModel <|-- Review
    BaseModel <|-- Amenity
    BaseModel <|-- Booking

    %% Associations with Multiplicity
    User "1" -- "*" Place : owns
    User "1" -- "*" Review : writes
    Place "1" -- "*" Review : receives
    User "1" -- "*" Booking : makes
    Place "1" -- "*" Booking : booked_in
    
    %% Many-to-Many Relationships
    Place "*" -- "*" Amenity : has
    User "*" -- "*" User : follows (social)
    
    %% Composition Relationships
    Booking *-- Review : generates
    User *-- Booking : creates

    %% Dependency Relationships
    Review ..> Place : depends on
    Review ..> User : depends on
    Booking ..> Place : depends on
    Booking ..> User : depends on
